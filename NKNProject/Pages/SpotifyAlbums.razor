@page "/spotify"
@inject SpotifyBuilder builder

<MudText Typo="Typo.h4">Albums</MudText>

@if (albums != null)
{
    <MudGrid>
        @foreach (var item in albums.Items)
        {
            <MudItem xs="12" sm="6" md="3" lg="4">
                <MudCard>
                    <MudCardMedia Image="@item.Images[0].Url" Height="200" />
                    <MudCardContent>
                        <MudText Typo="Typo.h5">@item.Name</MudText>
                        <MudText Typo="Typo.body2">@item.ReleaseDate</MudText>
                        <MudText Typo="Typo.body2">@item.AlbumType</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <MudIconButton Link="@item.Uri" Icon="@Icons.Material.Filled.Share" Color="Color.Default" />
                    </MudCardActions>
                </MudCard>
            </MudItem>
        }
    </MudGrid>

}
@code {
    public Paging<SimpleAlbum> albums { get; set; }

    public SpotifyAlbums() { }

    public SpotifyAlbums(SpotifyBuilder spotifyClientBuilder)
    {
        builder = spotifyClientBuilder;
    }

    protected override async Task OnInitializedAsync()
    {
        var spotify = builder.BuildClient();

        var albumRequest = new ArtistsAlbumsRequest
        {
            Limit = 8
        };
        albums = await spotify.Result.Artists.GetAlbums(Constants.ARTIST_ID, albumRequest);
    }
}
